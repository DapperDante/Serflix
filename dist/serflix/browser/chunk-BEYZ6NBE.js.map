{
  "version": 3,
  "sources": ["src/app/series/service/item-series.service.ts"],
  "sourcesContent": ["import { HttpClient, HttpErrorResponse, HttpEvent, HttpHandlerFn, HttpRequest } from '@angular/common/http';\r\nimport { inject, Injectable } from '@angular/core';\r\nimport { Series } from '../api/series';\r\nimport { Observable, catchError, map, tap } from 'rxjs';\r\nimport { environment } from 'src/environments/environment.development';\r\nimport { SerieInfo, VideosResult } from '../api/serie-info.api';\r\nimport { Service } from 'src/app/interface/service.interface';\r\nimport { ErrorHandlingService } from 'src/app/error/error-handling.service';\r\n\r\nconst PATH: string = `${environment.ApiTmdb}/tv`;\r\nconst PATH_DISCOVER: string = `${environment.ApiTmdb}/discover/tv`;\r\n@Injectable({\r\n\tprovidedIn: 'platform'\r\n})\r\nexport class ItemSeriesService implements Service{\r\n\tprivate readonly _http = inject(HttpClient);\r\n\tprivate readonly _error = inject(ErrorHandlingService);\r\n\tconstructor(){\r\n\t\tconsole.log(`Service ${this.constructor.name} running`);\r\n\t}\r\n\tgetSeriesAiringToday(page: number | string = 1): Observable<Series> {\r\n\t\treturn this._http.get<Series>(`${PATH}/airing_today?language=US&page=${page}`)\r\n\t\t.pipe(\r\n\t\t\tcatchError(this.ErrorHandler),\r\n\t\t\ttap({error: (error)=>this.ShowError(error)})\r\n\t\t)\r\n\t}\r\n\tgetSeriesOnTheAir(page: number | string = 1): Observable<Series> {\r\n\t\treturn this._http.get<Series>(`${PATH}/on_the_air?language=US&page=${page}`)\r\n\t\t.pipe(\r\n\t\t\tcatchError(this.ErrorHandler),\r\n\t\t\ttap({error: (error)=>this.ShowError(error)})\r\n\t\t);\r\n\t}\r\n\tgetSeriesPopular(page: number | string = 1): Observable<Series> {\r\n\t\treturn this._http.get<Series>(`${PATH}/popular?language=US&page=${page}`)\r\n\t\t.pipe(\r\n\t\t\tcatchError(this.ErrorHandler),\r\n\t\t\ttap({error: (error)=>this.ShowError(error)})\r\n\t\t);\r\n\t}\r\n\tgetSeriesTopRated(page: number | string = 1): Observable<Series> {\r\n\t\treturn this._http.get<Series>(`${PATH}/top_rated?language=US&page=${page}`)\r\n\t\t.pipe(\r\n\t\t\tcatchError(this.ErrorHandler),\r\n\t\t\ttap({error: (error)=>this.ShowError(error)})\r\n\t\t);\r\n\t}\r\n\tgetSerieById(id: number): Observable<SerieInfo> {\r\n\t\treturn this._http\r\n\t\t\t.get<SerieInfo>(\r\n\t\t\t\t`${PATH}/${id}?append_to_response=videos%2Cimages%2Ccredits%2Csimilar%2Crecommendations&language=US`\r\n\t\t\t)\r\n\t\t\t.pipe(\r\n\t\t\t\tmap((data)=>{\r\n\t\t\t\t\tif(data.videos)\r\n\t\t\t\t\t\tdata.videos.results = [data.videos.results.find((video:VideosResult) => (video.type = 'Trailer'))!];\r\n\t\t\t\t\treturn data;\r\n\t\t\t\t}),\r\n\t\t\t\tcatchError(this.ErrorHandler),\r\n\t\t\t\ttap({\r\n\t\t\t\t\terror: (error)=>this.ShowError(error)\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}\r\n\tgetSeriesByGenre(idGenre: number | string, page: number | string = 1): Observable<Series> {\r\n\t\treturn this._http.get<Series>(`${PATH_DISCOVER}?with_genres=${idGenre}&page=${page}`)\r\n\t\t.pipe(\r\n\t\t\tcatchError(this.ErrorHandler),\r\n\t\t\ttap({error: (error)=>this.ShowError(error)})\r\n\t\t);\r\n\t}\r\n\tShowError(error: Error): void {\r\n\t\tthis._error.ShowError(error.message);\r\n\t}\r\n\tErrorHandler(error: HttpErrorResponse): Observable<never> {\r\n\t\tlet message = '';\r\n\t\tswitch(error.status){\r\n\t\t\tcase 404:\r\n\t\t\t\tmessage = 'Not find serie';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 500:\r\n\t\t\t\tmessage = 'Internal server error';\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tmessage = 'Server disconnected';\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn new Observable<never>(observer => observer.error(new Error(message)));\r\n\t}\r\n}\r\nexport function ItemSeriesInterceptor(req: HttpRequest<unknown>, next: HttpHandlerFn): Observable<HttpEvent<unknown>> {\r\n\tif (!req.url.includes(PATH) && !req.url.includes(PATH_DISCOVER)) return next(req);\r\n\t\tconst BASE_IMG = environment.ApiTmdbImage;\r\n\t\tconst newReq = req.clone();\r\n\t\treturn next(newReq).pipe(\r\n\t\t\tmap((data: any) => {\r\n\t\t\t\tconst { body } = data;\r\n\t\t\t\tif (body) {\r\n\t\t\t\t\tif ('results' in body && Array.isArray(body.results)) {\r\n\t\t\t\t\t\tbody.results = body.results\r\n\t\t\t\t\t\t\t.filter((item: any) => item.poster_path)\r\n\t\t\t\t\t\t\t.map((item: any) => {\r\n\t\t\t\t\t\t\t\titem.poster_path = `${BASE_IMG}${item.poster_path}`;\r\n\t\t\t\t\t\t\t\titem.backdrop_path = `${BASE_IMG}${item.backdrop_path}`;\r\n\t\t\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbody.poster_path = `${BASE_IMG}${body.poster_path}`;\r\n\t\t\t\t\t\tbody.backdrop_path = `${BASE_IMG}${body.backdrop_path}`;\r\n\t\t\t\t\t\tif ('similar' in body && Array.isArray(body.similar.results)) {\r\n\t\t\t\t\t\t\tbody.similar.results = body.similar.results\r\n\t\t\t\t\t\t\t\t.filter((item: any) => item.poster_path)\r\n\t\t\t\t\t\t\t\t.map((item: any) => {\r\n\t\t\t\t\t\t\t\t\titem.poster_path = `${BASE_IMG}${item.poster_path}`;\r\n\t\t\t\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ('recommendations' in body && Array.isArray(body.recommendations.results)) {\r\n\t\t\t\t\t\t\tbody.recommendations.results = body.recommendations.results\r\n\t\t\t\t\t\t\t\t.filter((item: any) => item.poster_path)\r\n\t\t\t\t\t\t\t\t.map((item: any) => {BASE_IMG\r\n\t\t\t\t\t\t\t\t\titem.poster_path = `${BASE_IMG}${item.poster_path}`;\r\n\t\t\t\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn data;\r\n\t\t\t})\r\n\t\t);\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
