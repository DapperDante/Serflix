{"version":3,"sources":["node_modules/ngx-cookie-service/fesm2022/ngx-cookie-service.mjs","src/app/service/auth.service.ts"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Injectable, Inject } from '@angular/core';\nimport { isPlatformBrowser, DOCUMENT } from '@angular/common';\n\n// This service is based on the `ng2-cookies` package which sadly is not a service and does\n// not use `DOCUMENT` injection and therefore doesn't work well with AoT production builds.\n// Package: https://github.com/BCJTI/ng2-cookies\nclass CookieService {\n  constructor(document,\n  // Get the `PLATFORM_ID` so we can check if we're in a browser.\n  platformId) {\n    this.document = document;\n    this.platformId = platformId;\n    this.documentIsAccessible = isPlatformBrowser(this.platformId);\n  }\n  /**\n   * Get cookie Regular Expression\n   *\n   * @param name Cookie name\n   * @returns property RegExp\n   *\n   * @author: Stepan Suvorov\n   * @since: 1.0.0\n   */\n  static getCookieRegExp(name) {\n    const escapedName = name.replace(/([\\[\\]{}()|=;+?,.*^$])/gi, '\\\\$1');\n    return new RegExp('(?:^' + escapedName + '|;\\\\s*' + escapedName + ')=(.*?)(?:;|$)', 'g');\n  }\n  /**\n   * Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).\n   *\n   * @param encodedURIComponent A value representing an encoded URI component.\n   *\n   * @returns The unencoded version of an encoded component of a Uniform Resource Identifier (URI).\n   *\n   * @author: Stepan Suvorov\n   * @since: 1.0.0\n   */\n  static safeDecodeURIComponent(encodedURIComponent) {\n    try {\n      return decodeURIComponent(encodedURIComponent);\n    } catch {\n      // probably it is not uri encoded. return as is\n      return encodedURIComponent;\n    }\n  }\n  /**\n   * Return `true` if {@link Document} is accessible, otherwise return `false`\n   *\n   * @param name Cookie name\n   * @returns boolean - whether cookie with specified name exists\n   *\n   * @author: Stepan Suvorov\n   * @since: 1.0.0\n   */\n  check(name) {\n    if (!this.documentIsAccessible) {\n      return false;\n    }\n    name = encodeURIComponent(name);\n    const regExp = CookieService.getCookieRegExp(name);\n    return regExp.test(this.document.cookie);\n  }\n  /**\n   * Get cookies by name\n   *\n   * @param name Cookie name\n   * @returns property value\n   *\n   * @author: Stepan Suvorov\n   * @since: 1.0.0\n   */\n  get(name) {\n    if (this.documentIsAccessible && this.check(name)) {\n      name = encodeURIComponent(name);\n      const regExp = CookieService.getCookieRegExp(name);\n      const result = regExp.exec(this.document.cookie);\n      return result[1] ? CookieService.safeDecodeURIComponent(result[1]) : '';\n    } else {\n      return '';\n    }\n  }\n  /**\n   * Get all cookies in JSON format\n   *\n   * @returns all the cookies in json\n   *\n   * @author: Stepan Suvorov\n   * @since: 1.0.0\n   */\n  getAll() {\n    if (!this.documentIsAccessible) {\n      return {};\n    }\n    const cookies = {};\n    const document = this.document;\n    if (document.cookie && document.cookie !== '') {\n      document.cookie.split(';').forEach(currentCookie => {\n        const [cookieName, cookieValue] = currentCookie.split('=');\n        cookies[CookieService.safeDecodeURIComponent(cookieName.replace(/^ /, ''))] = CookieService.safeDecodeURIComponent(cookieValue);\n      });\n    }\n    return cookies;\n  }\n  set(name, value, expiresOrOptions, path, domain, secure, sameSite, partitioned) {\n    if (!this.documentIsAccessible) {\n      return;\n    }\n    if (typeof expiresOrOptions === 'number' || expiresOrOptions instanceof Date || path || domain || secure || sameSite) {\n      const optionsBody = {\n        expires: expiresOrOptions,\n        path,\n        domain,\n        secure,\n        sameSite: sameSite ? sameSite : 'Lax',\n        partitioned\n      };\n      this.set(name, value, optionsBody);\n      return;\n    }\n    let cookieString = encodeURIComponent(name) + '=' + encodeURIComponent(value) + ';';\n    const options = expiresOrOptions ? expiresOrOptions : {};\n    if (options.expires) {\n      if (typeof options.expires === 'number') {\n        const dateExpires = new Date(new Date().getTime() + options.expires * 1000 * 60 * 60 * 24);\n        cookieString += 'expires=' + dateExpires.toUTCString() + ';';\n      } else {\n        cookieString += 'expires=' + options.expires.toUTCString() + ';';\n      }\n    }\n    if (options.path) {\n      cookieString += 'path=' + options.path + ';';\n    }\n    if (options.domain) {\n      cookieString += 'domain=' + options.domain + ';';\n    }\n    if (options.secure === false && options.sameSite === 'None') {\n      options.secure = true;\n      console.warn(`[ngx-cookie-service] Cookie ${name} was forced with secure flag because sameSite=None.` + `More details : https://github.com/stevermeister/ngx-cookie-service/issues/86#issuecomment-597720130`);\n    }\n    if (options.secure) {\n      cookieString += 'secure;';\n    }\n    if (!options.sameSite) {\n      options.sameSite = 'Lax';\n    }\n    cookieString += 'sameSite=' + options.sameSite + ';';\n    if (options.partitioned) {\n      cookieString += 'Partitioned;';\n    }\n    this.document.cookie = cookieString;\n  }\n  /**\n   * Delete cookie by name\n   *\n   * @param name   Cookie name\n   * @param path   Cookie path\n   * @param domain Cookie domain\n   * @param secure Cookie secure flag\n   * @param sameSite Cookie sameSite flag - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite\n   *\n   * @author: Stepan Suvorov\n   * @since: 1.0.0\n   */\n  delete(name, path, domain, secure, sameSite = 'Lax') {\n    if (!this.documentIsAccessible) {\n      return;\n    }\n    const expiresDate = new Date('Thu, 01 Jan 1970 00:00:01 GMT');\n    this.set(name, '', {\n      expires: expiresDate,\n      path,\n      domain,\n      secure,\n      sameSite\n    });\n  }\n  /**\n   * Delete all cookies\n   *\n   * @param path   Cookie path\n   * @param domain Cookie domain\n   * @param secure Is the Cookie secure\n   * @param sameSite Is the cookie same site\n   *\n   * @author: Stepan Suvorov\n   * @since: 1.0.0\n   */\n  deleteAll(path, domain, secure, sameSite = 'Lax') {\n    if (!this.documentIsAccessible) {\n      return;\n    }\n    const cookies = this.getAll();\n    for (const cookieName in cookies) {\n      if (cookies.hasOwnProperty(cookieName)) {\n        this.delete(cookieName, path, domain, secure, sameSite);\n      }\n    }\n  }\n  static {\n    this.ɵfac = function CookieService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CookieService)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(PLATFORM_ID));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: CookieService,\n      factory: CookieService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CookieService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: Document,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }], null);\n})();\n\n/*\n * Public API Surface of ngx-cookie-service\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CookieService };\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { inject, Injectable } from '@angular/core';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { catchError, Observable, tap, throwError } from 'rxjs';\r\nimport { ErrorHandlingService } from 'src/app/error/error-handling.service';\r\nimport { Service } from 'src/app/interface/service.interface';\r\nimport { environment } from 'src/environments/environment.development';\r\n\r\nconst PATH = environment.ApiDbUsers;\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root',\r\n})\r\nexport class AuthService implements Service{\r\n\tprivate readonly _http = inject(HttpClient);\r\n\tprivate readonly _error = inject(ErrorHandlingService);\r\n\tprivate readonly _cookieService = inject(CookieService);\r\n\tconstructor() {\r\n\t\tconsole.log(`Service ${this.constructor.name} is ready`);\r\n\t}\r\n\tRegister(username: string, email: string, password: string): Observable<{msg:string, token:string}> {\r\n\t\tconst newUser = { username, email, password };\r\n\t\treturn this._http.post<{ msg: string; token: string }>(`${PATH}/register`, newUser).pipe(\r\n\t\t\tcatchError(this.ErrorHandler),\r\n\t\t\ttap({\r\n\t\t\t\tnext: (data) => {\r\n\t\t\t\t\tthis.setToken(data.token);\r\n\t\t\t\t},\r\n\t\t\t\terror: (error)=>{\r\n\t\t\t\t\tthis.ShowError(error);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\tLogin(username: string, password: string): Observable<{msg: string, token: string}> {\r\n\t\tconst user = { username, password };\r\n\t\treturn this._http.post<{ msg: string; token: string }>(`${PATH}/login`, user).pipe(\r\n\t\t\tcatchError(this.ErrorHandler),\r\n\t\t\ttap({\r\n\t\t\t\tnext: (data) => {\r\n\t\t\t\t\tthis.setToken(data.token);\r\n\t\t\t\t},\r\n\t\t\t\terror: (error) => {\r\n\t\t\t\t\tthis.ShowError(error);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\tLogout(): void {\r\n\t\tthis._cookieService.delete('access-token');\r\n\t}\r\n\tgetToken(): string | undefined {\r\n\t\treturn this._cookieService.get('access-token');\r\n\t}\r\n\tsetToken(token: string){\r\n\t\tthis._cookieService.set('access-token', token);\r\n\t}\r\n\tShowError(error: Error){\r\n\t\tthis._error.ShowError(error.message);\r\n\t}\r\n\tErrorHandler(error: HttpErrorResponse): Observable<never> {\r\n\t\tlet message = '';\r\n\t\tswitch (error.status) {\r\n\t\t\tcase 404:\r\n\t\t\t\tmessage = 'Incorrect user';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 401:\r\n\t\t\t\tmessage = 'Incorrect password';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 400:\r\n\t\t\t\tmessage = 'User already exists';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 500:\r\n\t\t\t\tmessage = 'Internal server error';\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tmessage = 'Server disconnected';\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn throwError(() => new Error(message));\r\n\t}\r\n}\r\n"],"mappings":"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","names":[],"x_google_ignoreList":[0]}