{
  "version": 3,
  "sources": ["src/app/series/service/favorite-series.service.ts"],
  "sourcesContent": ["import { HttpClient, HttpErrorResponse, HttpEvent, HttpHandlerFn, HttpRequest } from '@angular/common/http';\r\nimport { inject, Injectable } from '@angular/core';\r\nimport { catchError, map, Observable, tap, throwError } from 'rxjs';\r\nimport { environment } from 'src/environments/environment.development';\r\nimport { SerieInfo, SeriesInfo } from '../api/serie-info.api';\r\nimport { Service } from 'src/app/interface/service.interface';\r\nimport { ErrorHandlingService } from 'src/app/error/error-handling.service';\r\n\r\nconst PATH: string = environment.ApiDbSeries;\r\n\r\n@Injectable({\r\n\tprovidedIn: 'platform'\r\n})\r\nexport class FavoriteSeriesService implements Service{\r\n\tprivate readonly _http = inject(HttpClient);\r\n\tprivate readonly _error = inject(ErrorHandlingService);\r\n\tconstructor(){\r\n\t\tconsole.log(`Service ${this.constructor.name} is ready`);\r\n\t}\r\n\tgetSeriesProfile(): Observable<SeriesInfo> {\r\n\t\treturn this._http.get<SeriesInfo>(`${PATH}/get`)\r\n\t\t.pipe(\r\n\t\t\tcatchError(this.ErrorHandler),\r\n\t\t\ttap({error: (error)=>this.ShowError(error)})\r\n\t\t);\r\n\t}\r\n\taddSerie(idSerie: number): Observable<{ msg: string; id: number }> {\r\n\t\tconst serie = {idSerie};\r\n\t\treturn this._http.post<{ msg: string; id: number }>(`${PATH}/add`, serie)\r\n\t\t.pipe(\r\n\t\t\tcatchError(this.ErrorHandler),\r\n\t\t\ttap({error: (error)=>this.ShowError(error)})\r\n\t\t);\r\n\t}\r\n\tgetSerieProfile(idSerie: number | string): Observable<SerieInfo> {\r\n\t\treturn this._http.get<SerieInfo>(`${PATH}/get/${idSerie}`)\r\n\t\t.pipe(\r\n\t\t\tcatchError(this.ErrorHandler),\r\n\t\t\ttap({error: (error)=>this.ShowError(error)})\r\n\t\t);\r\n\t}\r\n\tdeleteSerie(idDoc: number | string): Observable<void> {\r\n\t\treturn this._http.delete<void>(`${PATH}/delete/${idDoc}`)\r\n\t\t.pipe(\r\n\t\t\tcatchError(this.ErrorHandler),\r\n\t\t\ttap({error: (error)=>this.ShowError(error)})\r\n\t\t);\r\n\t}\r\n\tShowError(error: Error): void {\r\n\t\tthis._error.ShowError(error.message);\r\n\t}\r\n\tErrorHandler(error: HttpErrorResponse): Observable<never> {\r\n\t\tlet message = '';\r\n\t\tswitch(error.status){\r\n\t\t\tcase 404:\r\n\t\t\t\tmessage = 'Not find serie';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 500:\r\n\t\t\t\tmessage = 'Internal server error';\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tmessage = 'Server disconnected';\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn throwError(()=>new Error(message));\r\n\t}\r\n}\r\nexport function FavoriteSeriesInterceptor(\r\n\treq: HttpRequest<unknown>,\r\n\tnext: HttpHandlerFn\r\n): Observable<HttpEvent<unknown>> {\r\n\tif (!req.url.includes(PATH)) return next(req);\r\n\t\tconst BASE_IMG = environment.ApiTmdbImage;\r\n\t\tconst newReq = req.clone();\r\n\t\treturn next(newReq).pipe(\r\n\t\t\tmap((data: any) => {\r\n\t\t\t\tconst { body } = data;\r\n\t\t\t\tif (body) {\r\n\t\t\t\t\tif ('results' in body && Array.isArray(body.results)) {\r\n\t\t\t\t\t\tbody.results = body.results\r\n\t\t\t\t\t\t\t.filter((item: any) => item.poster_path)\r\n\t\t\t\t\t\t\t.map((item: any) => {\r\n\t\t\t\t\t\t\t\titem.poster_path = `${BASE_IMG}${item.poster_path}`;\r\n\t\t\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn data;\r\n\t\t\t})\r\n\t\t);\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;AAQA,IAAM,OAAe,YAAY;AAK3B,IAAO,wBAAP,MAAO,uBAAqB;EAGjC,cAAA;AAFiB,SAAA,QAAQ,OAAO,UAAU;AACzB,SAAA,SAAS,OAAO,oBAAoB;AAEpD,YAAQ,IAAI,WAAW,KAAK,YAAY,IAAI,WAAW;EACxD;EACA,mBAAgB;AACf,WAAO,KAAK,MAAM,IAAgB,GAAG,IAAI,MAAM,EAC9C,KACA,WAAW,KAAK,YAAY,GAC5B,IAAI,EAAC,OAAO,CAAC,UAAQ,KAAK,UAAU,KAAK,EAAC,CAAC,CAAC;EAE9C;EACA,SAAS,SAAe;AACvB,UAAM,QAAQ,EAAC,QAAO;AACtB,WAAO,KAAK,MAAM,KAAkC,GAAG,IAAI,QAAQ,KAAK,EACvE,KACA,WAAW,KAAK,YAAY,GAC5B,IAAI,EAAC,OAAO,CAAC,UAAQ,KAAK,UAAU,KAAK,EAAC,CAAC,CAAC;EAE9C;EACA,gBAAgB,SAAwB;AACvC,WAAO,KAAK,MAAM,IAAe,GAAG,IAAI,QAAQ,OAAO,EAAE,EACxD,KACA,WAAW,KAAK,YAAY,GAC5B,IAAI,EAAC,OAAO,CAAC,UAAQ,KAAK,UAAU,KAAK,EAAC,CAAC,CAAC;EAE9C;EACA,YAAY,OAAsB;AACjC,WAAO,KAAK,MAAM,OAAa,GAAG,IAAI,WAAW,KAAK,EAAE,EACvD,KACA,WAAW,KAAK,YAAY,GAC5B,IAAI,EAAC,OAAO,CAAC,UAAQ,KAAK,UAAU,KAAK,EAAC,CAAC,CAAC;EAE9C;EACA,UAAU,OAAY;AACrB,SAAK,OAAO,UAAU,MAAM,OAAO;EACpC;EACA,aAAa,OAAwB;AACpC,QAAI,UAAU;AACd,YAAO,MAAM,QAAO;MACnB,KAAK;AACJ,kBAAU;AACV;MACD,KAAK;AACJ,kBAAU;AACV;MACD;AACC,kBAAU;AACV;IACF;AACA,WAAO,WAAW,MAAI,IAAI,MAAM,OAAO,CAAC;EACzC;;;uCApDY,wBAAqB;IAAA;EAAA;;4EAArB,wBAAqB,SAArB,uBAAqB,WAAA,YAFrB,WAAU,CAAA;EAAA;;AAwDjB,SAAU,0BACf,KACA,MAAmB;AAEnB,MAAI,CAAC,IAAI,IAAI,SAAS,IAAI;AAAG,WAAO,KAAK,GAAG;AAC3C,QAAM,WAAW,YAAY;AAC7B,QAAM,SAAS,IAAI,MAAK;AACxB,SAAO,KAAK,MAAM,EAAE,KACnB,IAAI,CAAC,SAAa;AACjB,UAAM,EAAE,KAAI,IAAK;AACjB,QAAI,MAAM;AACT,UAAI,aAAa,QAAQ,MAAM,QAAQ,KAAK,OAAO,GAAG;AACrD,aAAK,UAAU,KAAK,QAClB,OAAO,CAAC,SAAc,KAAK,WAAW,EACtC,IAAI,CAAC,SAAa;AAClB,eAAK,cAAc,GAAG,QAAQ,GAAG,KAAK,WAAW;AACjD,iBAAO;QACR,CAAC;MACH;IACD;AACA,WAAO;EACR,CAAC,CAAC;AAEL;",
  "names": []
}
